<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>1022 â€” Only The Real Thrive</title>
  <style>
    @import url('https://fonts.cdnfonts.com/css/engravers-old-english'); /* Engravers Old English font */

    body {
      margin: 0;
      height: 100vh;
      background: #111;
      color: #fff;
      font-family: 'Engravers Old English', serif;
      display: flex;
      justify-content: center;
      align-items: center;
      overflow: hidden;
      position: relative;
    }

    .content {
      position: relative;
      z-index: 2;
      text-align: center;
      color: tan;
    }

    .slogan {
      font-size: 1.5em;
      color: #8B4513; /* brown */
      margin-bottom: 10px;
      text-transform: uppercase;
    }

    h1 {
      font-size: 4em;
      color: red;
      margin: 0;
      letter-spacing: 2px;
    }

    h2 {
      font-size: 2em;
      color: green;
      margin: 10px 0 30px;
    }

    a.shop-btn {
      display: inline-block;
      padding: 15px 30px;
      background: green;
      color: tan;
      text-decoration: none;
      font-size: 1.2em;
      border-radius: 8px;
      transition: 0.3s;
    }

    a.shop-btn:hover {
      background: tan;
      color: red;
    }

    canvas {
      position: absolute;
      top: 0; left: 0;
      z-index: 1;
      display: block;
    }

    /* Hover glow effect on stars */
    .glow {
      glow-color: #e91e63;
      filter: drop-shadow(0 0 6px #e91e63);
    }

    /* Modal styles */
    #videoModal {
      display: none;
      position: fixed;
      z-index: 10;
      left: 0; top: 0;
      width: 100%; height: 100%;
      background: rgba(0,0,0,0.85);
      backdrop-filter: blur(4px);
      justify-content: center;
      align-items: center;
    }

    #videoModal.active {
      display: flex;
    }

    #videoModal iframe {
      width: 80vw;
      height: 45vw;
      max-width: 900px;
      max-height: 506px;
      border: none;
      border-radius: 10px;
      box-shadow: 0 0 30px #e91e63aa;
    }

    #closeModal {
      position: absolute;
      top: 20px; right: 30px;
      font-size: 2em;
      color: #e91e63;
      cursor: pointer;
      font-weight: bold;
      background: none;
      border: none;
    }
  </style>
</head>
<body>

  <div class="content">
    <div class="slogan">Only The Real Thrive</div>
    <h1>1022</h1>
    <h2>Streetwear That Speaks</h2>
    <a href="https://example.com/shop" class="shop-btn">Shop Now</a>
  </div>

  <canvas id="stars"></canvas>

  <!-- Video Modal -->
  <div id="videoModal">
    <button id="closeModal" title="Close Video">&times;</button>
    <iframe id="videoFrame" src="" allow="autoplay; encrypted-media" allowfullscreen></iframe>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>

  <script>
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, innerWidth/innerHeight, 0.1, 1000);
    const renderer = new THREE.WebGLRenderer({canvas: document.getElementById('stars'), alpha: true});
    renderer.setSize(innerWidth, innerHeight);
    camera.position.z = 50;

    const stars = new THREE.Group();
    scene.add(stars);

    const geometry = new THREE.SphereGeometry(0.5, 16, 16);
    const material = new THREE.MeshStandardMaterial({
      color: 0xffffff,
      metalness: 1,
      roughness: 0,
    });

    // Store stars for interaction
    const clickableStars = [];

    for (let i = 0; i < 200; i++) {
      const star = new THREE.Mesh(geometry, material);
      star.position.set(
        (Math.random() - 0.5) * 200,
        (Math.random() - 0.5) * 200,
        (Math.random() - 0.5) * 200
      );
      stars.add(star);
      clickableStars.push(star);
    }

    const light = new THREE.PointLight(0xffffff, 1);
    camera.add(light);
    scene.add(camera);

    // Raycaster for hover/click detection
    const raycaster = new THREE.Raycaster();
    const mouse = new THREE.Vector2();

    // Track hovered star
    let hoveredStar = null;

    function animate() {
      requestAnimationFrame(animate);
      stars.rotation.y += 0.0005;
      renderer.render(scene, camera);
    }
    animate();

    // Update mouse for raycasting
    window.addEventListener('mousemove', (event) => {
      mouse.x = (event.clientX / window.innerWidth) * 2 - 1;
      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;

      raycaster.setFromCamera(mouse, camera);
      const intersects = raycaster.intersectObjects(clickableStars);

      if (intersects.length > 0) {
        if (hoveredStar !== intersects[0].object) {
          hoveredStar = intersects[0].object;
          document.body.style.cursor = 'pointer';
        }
      } else {
        hoveredStar = null;
        document.body.style.cursor = 'default';
      }
    });

    // Modal Elements
    const modal = document.getElementById('videoModal');
    const iframe = document.getElementById('videoFrame');
    const closeBtn = document.getElementById('closeModal');

    // Click event for stars
    window.addEventListener('click', (event) => {
      mouse.x = (event.clientX / window.innerWidth) * 2 - 1;
      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;
      raycaster.setFromCamera(mouse, camera);
      const intersects = raycaster.intersectObjects(clickableStars);

      if (intersects.length > 0) {
        openModal();
      }
    });

    function openModal() {
      // Replace with your actual BTS video URL (YouTube embed link)
      iframe.src = 'https://www.youtube.com/embed/YOUR_VIDEO_ID?autoplay=1&rel=0';
      modal.classList.add('active');
    }

    function closeModal() {
      modal.classList.remove('active');
      iframe.src = '';
    }

    closeBtn.addEventListener('click', closeModal);

    // Close modal on outside click
    modal.addEventListener('click', (e) => {
      if (e.target === modal) closeModal();
    });

    window.addEventListener('resize', () => {
      camera.aspect = innerWidth / innerHeight;
      camera.updateProjectionMatrix();
      renderer.setSize(innerWidth, innerHeight);
    });
  </script>

</body>
</html>
